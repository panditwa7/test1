---
# tasks file for mgr
- name: Load variable file
  include_vars: ../../../ENV_INFO/mgr.yml
- name: Load enviroment file
  include_vars: ../../../ENV_INFO/emm.yml
- name: Get EM20 Installation Tool version
  shell: ls -td {{ working_dir }}/CXP* | head -1
  register: version  
- name: Go to template path & create ini file
  shell:
    chdir: '{{ version.stdout }}/templates/Linux'
    cmd: cp config_template_MGR.eric config_template_MGR.ini
#- name: Copy the app installation script
#  copy: src=Install_App.sh dest={{ version.stdout }}/ backup=yes
- name: Comment out Edittemplate in Install_App.sh to skip user iteraction
  replace:
    dest: '{{ version.stdout }}/Install_App.sh'
    regexp: '(.*Edittemplate.*)'
    replace: '# \1'
    backup: yes
- name: Update the ini file
  ini_file:
    path: '{{ version.stdout }}/templates/Linux/config_template_MGR.ini'
    section: null
    option: "{{item.key}}"
    value: "{{item.value}}"
    no_extra_spaces: yes
  with_dict: {MANAGER_PG_DB_USER: "{{ MANAGER_PG_DB_USER | default() }}",MANAGER_PG_DB_PASSWD: "{{ MANAGER_PG_DB_PASSWD | default() }}",MANAGER_PG_DB_Port: "{{ MANAGER_PG_DB_Port | default() }}", Manager_IP: "{{ Manager_IP | default() }}",Manager_Netmask: "{{ Manager_Netmask | default() }}",LIC_IP: "{{ LIC_IP | default() }}", LIC_Netmask: "{{ LIC_Netmask | default() }}"}
  when: " not item.value == '' "
- name: Copy automation script
  copy: src=install_MGR.sh dest={{ version.stdout }}/install_MGR.sh mode=u+rwx
- name: Execute the MGR App Installation script - check logs in /var/adm/MM_LOGS/App
  shell: sh ./install_MGR.sh {{ deployment }} '{{ app_other_options }}'
  args:
    chdir: '{{ version.stdout }}'
    
    
 

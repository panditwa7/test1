---
# tasks file for platform_cps
- name: Load enviroment file
  include_vars: ../ENV_INFO/emm.yml
- name: Get hostname
  shell: hostname
  register: hostname
- name: include vars specific to hostname
  include_vars:
    dir: ../../../ENV_INFO/
    files_matching: "{{ hostname.stdout }}"
- name: Get EM20 Installation Tool version
  shell: ls -td {{ working_dir}}/CXP* | head -1
  register: version
- name: Go to template path & create cps ini
  shell:
    chdir: '{{ version.stdout }}/templates/Linux'
    cmd: cp -p platform_cps.ini.eric platform_cps.ini
#- name: Copy the platform script
#  copy: src=Install_Platform.sh dest={{ version.stdout }}/ backup=yes
- name: Comment out Edittemplate in Install_Platform.sh to skip user iteraction
  replace: 
    dest: '{{ version.stdout }}/Install_Platform.sh'
    regexp: '(.*Edittemplate.*)'
    replace: '# \1 \n log "Devops: Edittemplate commented out"'
    backup: yes
- name: Update the cps ini file for ONM Bond
  ini_file:
    path: '{{ version.stdout }}/templates/Linux/platform_cps.ini'
    section: ONM Bond
    option: "{{item.key}}"
    value: "{{item.value}}"
    no_extra_spaces: yes
  with_dict: {bonding_interface_primary_ONM: "{{ bonding_interface_primary_ONM }}",bonding_interface_standby_ONM: "{{ bonding_interface_standby_ONM | default() }}"}
  when: " not item.value == '' "
- name: Update the cps ini file for Interface IP
  ini_file:
    path: '{{ version.stdout }}/templates/Linux/platform_cps.ini'
    section: Interface IP
    option: "{{item.key}}"
    value: "{{item.value}}"
    no_extra_spaces: yes
  with_dict: {bonding_interface_ip_ONM: "{{ bonding_interface_ip_ONM }}",netmask_ONM: "{{ netmask_ONM | default() }}",default_gateway_ip_ONM: "{{ default_gateway_ip_ONM }}" , bonding_interface_ip_Traffic: "{{ bonding_interface_ip_Traffic | default() }}", netmask_Traffic: "{{ netmask_Traffic | default() }}", default_gateway_ip_Traffic: "{{ default_gateway_ip_Traffic | default() }}"}
  when: " not item.value == '' "
- name: Update the cps ini file for CLUSTER
  ini_file:
    path: '{{ version.stdout }}/templates/Linux/platform_cps.ini'
    section: Cluster
    option: "{{item.key}}"
    value: "{{item.value}}"
    no_extra_spaces: yes
  with_dict: {cps_virtual_IP: "{{ cps_virtual_IP }}",other_hosts_ONM: "{{ other_hosts_ONM }}"}
- name: Update the cps ini file for NTPConfig
  ini_file:
    path: '{{ version.stdout }}/templates/Linux/platform_cps.ini'
    section: NTPConfig
    option: "{{item.key}}"
    value: "{{item.value}}"
    no_extra_spaces: yes
  with_dict: {NTP_Server_IP: "{{ NTP_Server_IP | default() }}"}
  when: " not item.value == '' "
- name: Copy automation script
  copy: src=install_updated.sh dest={{ version.stdout }}/
- name: Execute the CPS platform script - check logs in /var/adm/MM_LOGS/Platform - or connect with "screen -x DEVOPS" in "{{ hostname.stdout }}"
  shell: sh screen -S DEVOPS ./install_updated.sh
  #shell: sleep 500s
  args:
    chdir: '{{ version.stdout }}'
  #ignore_errors: true
  ignore_unreachable: true
    
 

---
# tasks file for olm
- name: Load variable file
  include_vars: ../../../ENV_INFO/olm.yml
- name: Load enviroment file
  include_vars: ../../../ENV_INFO/emm.yml
- name: Get EM20 Installation Tool version
  shell: ls -td {{ working_dir }}/CXP* | head -1
  register: version  
- name: Go to template path & create ini file
  shell:
    chdir: '{{ version.stdout }}/templates/Linux'
    cmd: cp config_template_OLM.eric config_template_OLM.ini; sudo chmod 777 config_template_OLM.ini
#- name: Copy the app installation script
#  copy: src=Install_App.sh dest={{ version.stdout }}/ backup=yes
- name: Comment out Edittemplate in Install_App.sh to skip user iteraction
  replace:
    dest: '{{ version.stdout }}/Install_App.sh'
    regexp: '(^[^#].*Edittemplate.*)'
    replace: '# \1 \n log "Devops: Edit template commented out"'
    backup: yes
- name: avoid terminal checks
  replace:
    dest: '{{ version.stdout }}/lib/Linux/libfunc_common_App.sh'
    regexp: '(.*)\[ -t 1 \](.*)'
    replace: '\1[ -t 9 ]\2'
    backup: yes
- name: Update the ini file for Interface IP
  ini_file:
    path: '{{ version.stdout }}/templates/Linux/config_template_OLM.ini'
    section: null
    option: "{{item.key}}"
    value: "{{item.value}}"
    no_extra_spaces: yes
  with_dict: {OLMServer_PG_DB_USER: "{{ OLMServer_PG_DB_USER | default() }}",OLMServer_PG_DB_PASSWD: "{{ OLMServer_PG_DB_PASSWD | default() }}",OLMServer_PG_DB_Port: "{{ OLMServer_PG_DB_Port | default() }}",OLMTracer_PG_DB_Port: "{{ OLMTracer_PG_DB_Port | default() }}",Manager_IP: "{{ Manager_IP | default() }}",OLMServer_IP: "{{ OLMServer_IP | default() }}" , OLMServer_Netmask: "{{ OLMServer_Netmask | default() }}" ,MANAGER_PG_DB_Port: "{{ MANAGER_PG_DB_Port | default() }}",OLMTracer_IP: "{{ OLMTracer_IP | default() }}",OLMTracer_Netmask: "{{ OLMTracer_Netmask | default() }}"}
  when: " not item.value == '' "
- name: Copy automation script
  copy: src=install_OLM.sh dest={{ version.stdout }}/install_OLM.sh mode=u+rwx
- name: Execute the OLM app installation script - check logs in /var/adm/MM_LOGS/App - or connect with "screen -x DEVOPS" in system
  shell: screen -S DEVOPS sh ./install_OLM.sh {{ deployment }} '{{ app_other_options }}'
  args:
    chdir: '{{ version.stdout }}'
    
 
